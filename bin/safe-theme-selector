#!/usr/bin/env bash

# WayNotes Safe Theme Selector
# Prevents waybar crashes by using only compatible CSS

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m'

# Safe theme definitions (no backdrop-filter, no unsupported properties)
# All themes now have consistent rounded borders for modern look
declare -A safe_themes=(
    ["minimal-dark"]="background-color: rgba(0, 0, 0, 0.7); color: #ffffff; padding: 4px 8px; border-radius: 12px; margin: 0 4px; border-left: 3px solid #3b82f6;"
    ["glass"]="background-color: rgba(255, 255, 255, 0.1); color: #ffffff; padding: 6px 12px; border-radius: 12px; margin: 0 6px; border: 1px solid rgba(255, 255, 255, 0.2); box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);"
    ["gradient-blue"]="background: linear-gradient(90deg, #3b82f6, #1d4ed8); color: #ffffff; padding: 5px 10px; border-radius: 12px; margin: 0 5px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);"
    ["neon-green"]="background-color: rgba(0, 0, 0, 0.8); color: #00ff88; padding: 5px 10px; border-radius: 12px; margin: 0 5px; border: 1px solid #00ff88; box-shadow: 0 0 5px rgba(0, 255, 136, 0.3);"
    ["purple-gradient"]="background: linear-gradient(90deg, #8b5cf6, #7c3aed); color: #ffffff; padding: 5px 10px; border-radius: 12px; margin: 0 5px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);"
    ["sunset"]="background: linear-gradient(90deg, #f59e0b, #d97706); color: #ffffff; padding: 5px 10px; border-radius: 12px; margin: 0 5px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);"
    ["ocean"]="background: linear-gradient(90deg, #06b6d4, #0891b2); color: #ffffff; padding: 5px 10px; border-radius: 12px; margin: 0 5px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);"
    ["forest"]="background: linear-gradient(90deg, #10b981, #059669); color: #ffffff; padding: 5px 10px; border-radius: 12px; margin: 0 5px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);"
    ["material"]="background-color: rgba(255, 255, 255, 0.15); color: #ffffff; padding: 6px 12px; border-radius: 12px; margin: 0 6px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);"
    ["elegant-dark"]="background-color: rgba(17, 24, 39, 0.9); color: #f9fafb; padding: 4px 10px; border-radius: 12px; margin: 0 5px; border: 1px solid rgba(156, 163, 175, 0.2); box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);"
    ["cyberpunk"]="background: linear-gradient(90deg, #dc2626, #7c2d12); color: #ffffff; padding: 5px 10px; border-radius: 12px; margin: 0 5px; border: 1px solid #dc2626; box-shadow: 0 0 8px rgba(220, 38, 38, 0.3);"
    ["minimal-clean"]="background-color: rgba(0, 0, 0, 0.4); color: #ffffff; padding: 4px 8px; border-radius: 12px; margin: 0 4px; border-left: 3px solid #3b82f6;"
)

# Theme descriptions
declare -A descriptions=(
    ["minimal-dark"]="Simple dark background with blue accent"
    ["glass"]="Semi-transparent glass effect (safe version)"
    ["gradient-blue"]="Beautiful blue gradient"
    ["neon-green"]="Cyberpunk neon green glow"
    ["purple-gradient"]="Elegant purple gradient"
    ["sunset"]="Warm sunset orange gradient"
    ["ocean"]="Calming ocean blue gradient"
    ["forest"]="Natural green forest gradient"
    ["material"]="Material Design inspired"
    ["elegant-dark"]="Sophisticated dark theme"
    ["cyberpunk"]="Futuristic red cyberpunk"
    ["minimal-clean"]="Clean minimal design"
)

show_help() {
    echo -e "${CYAN}WayNotes Safe Theme Selector${NC}"
    echo "================================"
    echo ""
    echo -e "${YELLOW}Safe themes that won't crash waybar:${NC}"
    echo ""
    for theme in "${!safe_themes[@]}"; do
        echo -e "  ${GREEN}$theme${NC} - ${descriptions[$theme]}"
    done
    echo ""
    echo "Usage:"
    echo "  $0 [THEME_NAME]                    # Apply theme"
    echo "  $0 --list                          # List all themes"
    echo "  $0 --apply [THEME_NAME] [CSS_FILE] # Apply to specific CSS file"
    echo "  $0 --test [THEME_NAME]             # Test theme CSS"
    echo ""
    echo "Examples:"
    echo "  $0 glass"
    echo "  $0 neon-green"
    echo "  $0 --apply gradient-blue ~/.config/waybar/style.css"
    echo ""
}

show_theme_css() {
    local theme_name="$1"
    
    if [[ -z "${safe_themes[$theme_name]}" ]]; then
        echo -e "${RED}Error: Theme '$theme_name' not found${NC}"
        echo "Use '$0 --list' to see available themes"
        exit 1
    fi
    
    echo -e "${CYAN}Theme: ${WHITE}$theme_name${NC}"
    echo -e "${CYAN}Description: ${WHITE}${descriptions[$theme_name]}${NC}"
    echo ""
    echo -e "${YELLOW}Safe CSS for waybar:${NC}"
    echo "#custom-waynotes {"
    echo "    ${safe_themes[$theme_name]}"
    echo "}"
    echo ""
    echo -e "${GREEN}[OK] This theme is guaranteed to work with all waybar versions${NC}"
}

apply_theme_to_file() {
    local theme_name="$1"
    local css_file="$2"
    
    if [[ -z "${safe_themes[$theme_name]}" ]]; then
        echo -e "${RED}Error: Theme '$theme_name' not found${NC}"
        exit 1
    fi
    
    if [[ ! -f "$css_file" ]]; then
        echo -e "${RED}Error: CSS file '$css_file' not found${NC}"
        exit 1
    fi
    
    # Remove existing waynotes CSS
    sed -i '/#custom-waynotes {/,/}/d' "$css_file"
    
    # Add new waynotes CSS
    echo "" >> "$css_file"
    echo "/* WayNotes Module Styling - Safe Theme: $theme_name */" >> "$css_file"
    echo "#custom-waynotes {" >> "$css_file"
    echo "    ${safe_themes[$theme_name]}" >> "$css_file"
    echo "}" >> "$css_file"
    
    echo -e "${GREEN}[OK] Theme '$theme_name' applied to '$css_file'${NC}"
    echo -e "${YELLOW}Restart waybar to see changes${NC}"
}

list_themes() {
    echo -e "${CYAN}Safe WayNotes Themes (Waybar Compatible)${NC}"
    echo "================================================"
    echo ""
    for theme in "${!safe_themes[@]}"; do
        echo -e "${GREEN}$theme${NC}"
        echo -e "  ${GRAY}${descriptions[$theme]}${NC}"
        echo ""
    done
    echo -e "${GREEN}[OK] All themes are tested and safe for waybar${NC}"
}

test_theme() {
    local theme_name="$1"
    
    if [[ -z "${safe_themes[$theme_name]}" ]]; then
        echo -e "${RED}Error: Theme '$theme_name' not found${NC}"
        exit 1
    fi
    
    echo -e "${CYAN}Testing theme: ${WHITE}$theme_name${NC}"
    echo ""
    echo -e "${YELLOW}CSS Properties:${NC}"
    echo "${safe_themes[$theme_name]}" | tr ';' '\n' | sed 's/^/  /'
    echo ""
    echo -e "${GREEN}[OK] Theme is safe and compatible${NC}"
}

# Main script
case "${1:-}" in
    -h|--help)
        show_help
        ;;
    --list)
        list_themes
        ;;
    --apply)
        if [[ -z "$2" ]] || [[ -z "$3" ]]; then
            echo -e "${RED}Error: --apply requires theme name and CSS file${NC}"
            echo "Usage: $0 --apply [THEME_NAME] [CSS_FILE]"
            exit 1
        fi
        apply_theme_to_file "$2" "$3"
        ;;
    --test)
        if [[ -z "$2" ]]; then
            echo -e "${RED}Error: --test requires theme name${NC}"
            echo "Usage: $0 --test [THEME_NAME]"
            exit 1
        fi
        test_theme "$2"
        ;;
    "")
        show_help
        ;;
    *)
        show_theme_css "$1"
        ;;
esac
